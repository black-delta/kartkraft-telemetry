// automatically generated by the FlatBuffers compiler, do not modify

package KartKraft;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
/**
 * Data associated with a vehicle which doesn't change dynamically during a race. e.g. class, num gears, driver name etc
 */
public final class VehicleConfig extends Table {
  public static VehicleConfig getRootAsVehicleConfig(ByteBuffer _bb) { return getRootAsVehicleConfig(_bb, new VehicleConfig()); }
  public static VehicleConfig getRootAsVehicleConfig(ByteBuffer _bb, VehicleConfig obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public VehicleConfig __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float rpmLimit() { int o = __offset(4); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float rpmMax() { int o = __offset(6); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public byte gearMax() { int o = __offset(8); return o != 0 ? bb.get(o + bb_pos) : 0; }

  public static int createVehicleConfig(FlatBufferBuilder builder,
      float rpmLimit,
      float rpmMax,
      byte gearMax) {
    builder.startObject(3);
    VehicleConfig.addRpmMax(builder, rpmMax);
    VehicleConfig.addRpmLimit(builder, rpmLimit);
    VehicleConfig.addGearMax(builder, gearMax);
    return VehicleConfig.endVehicleConfig(builder);
  }

  public static void startVehicleConfig(FlatBufferBuilder builder) { builder.startObject(3); }
  public static void addRpmLimit(FlatBufferBuilder builder, float rpmLimit) { builder.addFloat(0, rpmLimit, 0.0f); }
  public static void addRpmMax(FlatBufferBuilder builder, float rpmMax) { builder.addFloat(1, rpmMax, 0.0f); }
  public static void addGearMax(FlatBufferBuilder builder, byte gearMax) { builder.addByte(2, gearMax, 0); }
  public static int endVehicleConfig(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}


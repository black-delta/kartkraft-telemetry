// automatically generated by the FlatBuffers compiler, do not modify

package KartKraft;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class SessionConfig extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_12_0(); }
  public static SessionConfig getRootAsSessionConfig(ByteBuffer _bb) { return getRootAsSessionConfig(_bb, new SessionConfig()); }
  public static SessionConfig getRootAsSessionConfig(ByteBuffer _bb, SessionConfig obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public SessionConfig __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String name() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer nameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public long timeLimit() { int o = __offset(6); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public long lapLimit() { int o = __offset(8); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }

  public static int createSessionConfig(FlatBufferBuilder builder,
      int nameOffset,
      long timeLimit,
      long lapLimit) {
    builder.startTable(3);
    SessionConfig.addLapLimit(builder, lapLimit);
    SessionConfig.addTimeLimit(builder, timeLimit);
    SessionConfig.addName(builder, nameOffset);
    return SessionConfig.endSessionConfig(builder);
  }

  public static void startSessionConfig(FlatBufferBuilder builder) { builder.startTable(3); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(0, nameOffset, 0); }
  public static void addTimeLimit(FlatBufferBuilder builder, long timeLimit) { builder.addInt(1, (int)timeLimit, (int)0L); }
  public static void addLapLimit(FlatBufferBuilder builder, long lapLimit) { builder.addInt(2, (int)lapLimit, (int)0L); }
  public static int endSessionConfig(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public SessionConfig get(int j) { return get(new SessionConfig(), j); }
    public SessionConfig get(SessionConfig obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

